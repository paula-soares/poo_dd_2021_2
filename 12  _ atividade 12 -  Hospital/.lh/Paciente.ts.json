{
    "sourceFile": "Paciente.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1644359061246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1644359120485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n             return;\r\n         }\r\n \r\n         for (const value of this.medicos.values()) {\r\n-            if(medico.getEspecialidade.()valueOf === value.getEspecialidade().valueOf()){\r\n+            if(medico.getEspecialidade.valueOf() === value.getEspecialidade().valueOf()){\r\n                 console.log('nao eh possivel ser paciente de mais de um medico com a mesma especialidade');\r\n                 return;\r\n             }\r\n         }\r\n@@ -44,8 +44,8 @@\n         return Array.from(this.medicos.values());\r\n     }\r\n \r\n     toString() {\r\n-        return `pac: ${this.nome}:${this.diagnostico}/tMeds: [${this.medicos.values()}]`;\r\n+        return `pac: ${this.nome}:${this.diagnostico}   /tMeds: [${this.medicos.values()}]`;\r\n     }\r\n \r\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1644359061246,
            "name": "Commit-0",
            "content": "class Paciente implements IPaciente {\r\n    diagnostico: string;\r\n    medicos: Map<string, Medico>;\r\n    nome: string;\r\n\r\n    constructor(diagnostico:string, nome: string){\r\n        this.diagnostico = diagnostico;\r\n        this.medicos = new Map<string, Medico>();\r\n        this.nome = nome;\r\n    }\r\n\r\n    adicionarMedico(medico: Medico): void {\r\n        if(this.medicos.has(medico.getId())){\r\n            console.log('voce ja eh paciente deste medico');\r\n            return;\r\n        }\r\n\r\n        for (const value of this.medicos.values()) {\r\n            if(medico.getEspecialidade.()valueOf === value.getEspecialidade().valueOf()){\r\n                console.log('nao eh possivel ser paciente de mais de um medico com a mesma especialidade');\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.medicos.set(medico.getId(), medico);\r\n        console.log('medico adicionado');\r\n    }\r\n\r\n    removerMedico(nome: string): void {\r\n        if(this.medicos.has(nome)){\r\n            this.medicos.delete(nome);\r\n            console.log('medico removido');\r\n            return;\r\n        }\r\n        console.log('medico nao existe');\r\n    }\r\n    getDiagnostico(): string {\r\n        return this.diagnostico;\r\n    }\r\n    getId(): string {\r\n        return this.nome;\r\n    }\r\n    getMedicos(): Medico[] {\r\n        return Array.from(this.medicos.values());\r\n    }\r\n\r\n    toString() {\r\n        return `pac: ${this.nome}:${this.diagnostico}/tMeds: [${this.medicos.values()}]`;\r\n    }\r\n\r\n}"
        }
    ]
}